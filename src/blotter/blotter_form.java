/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package blotter;

import Config.Session;
import Config.config;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Raven
 */
public class blotter_form extends javax.swing.JFrame {
    public String Uidentifier;

    /**
     * Creates new form blotter_form
     */
    public blotter_form() {
        initComponents();
        displayData();
    }
    public void identify(String Uinfo){
        this.Uidentifier =  Uinfo;
    }
    public void displayData(){
        try{
            config conf = new config();
            ResultSet rs = conf.getData("SELECT c_id, fname, lname, gender, birth_date, status FROM citizen");
            users_table.setModel(DbUtils.resultSetToTableModel(rs));
             rs.close();
        }catch(SQLException ex){
            System.out.println("Errors: "+ex.getMessage());

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        reason = new javax.swing.JTextField();
        enter = new javax.swing.JLabel();
        clear = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox<>();
        back = new javax.swing.JLabel();
        cdate = new javax.swing.JSpinner();
        b_id = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        users_table = new javax.swing.JTable();
        Statement = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title.setFont(new java.awt.Font("Playbill", 1, 36)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Blotter Form");
        title.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 520, 40));

        reason.setBackground(new java.awt.Color(204, 255, 255));
        reason.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        reason.setToolTipText("");
        reason.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Reason", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 14))); // NOI18N
        reason.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                reasonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                reasonMouseExited(evt);
            }
        });
        reason.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reasonActionPerformed(evt);
            }
        });
        jPanel1.add(reason, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 210, 40));

        enter.setBackground(new java.awt.Color(204, 255, 255));
        enter.setFont(new java.awt.Font("Playbill", 0, 36)); // NOI18N
        enter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        enter.setText("Enter");
        enter.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        enter.setOpaque(true);
        enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enterMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                enterMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                enterMouseExited(evt);
            }
        });
        jPanel1.add(enter, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 340, 90, 40));

        clear.setBackground(new java.awt.Color(204, 255, 255));
        clear.setFont(new java.awt.Font("Playbill", 0, 36)); // NOI18N
        clear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clear.setText("Clear");
        clear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        clear.setOpaque(true);
        clear.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                clearMouseDragged(evt);
            }
        });
        clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                clearMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clearMousePressed(evt);
            }
        });
        jPanel1.add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 90, 40));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("-");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 0, 30, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("x");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 0, 30, 30));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 30));

        status.setBackground(new java.awt.Color(204, 255, 255));
        status.setEditable(true);
        status.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "Finished" }));
        status.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Status", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 14))); // NOI18N
        status.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusActionPerformed(evt);
            }
        });
        jPanel1.add(status, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 210, 70));

        back.setBackground(new java.awt.Color(204, 255, 255));
        back.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        back.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        back.setText("Back");
        back.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        back.setOpaque(true);
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backMouseExited(evt);
            }
        });
        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 50, 40));

        cdate.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, new java.util.Date(), java.util.Calendar.DAY_OF_YEAR));
        cdate.setBorder(javax.swing.BorderFactory.createTitledBorder("Creation Date"));
        jPanel1.add(cdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 210, 70));

        b_id.setBackground(new java.awt.Color(204, 255, 255));
        b_id.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        b_id.setToolTipText("");
        b_id.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Blotter ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 14))); // NOI18N
        b_id.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_idMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_idMouseExited(evt);
            }
        });
        b_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_idActionPerformed(evt);
            }
        });
        jPanel1.add(b_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 210, 40));

        users_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(users_table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, 360, 150));

        Statement.setBackground(new java.awt.Color(204, 255, 255));
        Statement.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        Statement.setToolTipText("");
        Statement.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Statement", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 14))); // NOI18N
        Statement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                StatementMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                StatementMouseExited(evt);
            }
        });
        Statement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatementActionPerformed(evt);
            }
        });
        jPanel1.add(Statement, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 250, 360, 130));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void reasonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reasonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_reasonMouseEntered

    private void reasonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reasonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_reasonMouseExited

    private void reasonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reasonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reasonActionPerformed

    private void enterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterMouseClicked
        // TODO add your handling code here:
        config conf = new config();
        Session sess = Session.getInstance();
        int rowIndex = users_table.getSelectedRow();
        int c_id = 0;

        if (enter.getText().equals("Add")) {
            if (Statement.getText().isEmpty()
                    || reason.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "All Fields are Required!");
            } else if (rowIndex < 0) {
                JOptionPane.showMessageDialog(null, "Please select an item!");
            } else {
                try {
                    TableModel tbl = users_table.getModel();
                    ResultSet rs = conf.getData("SELECT * FROM citizen WHERE c_id = '" + tbl.getValueAt(rowIndex, 0) + "'");
                    if (rs.next()) {
                        c_id = rs.getInt("c_id");
                    } else {
                        JOptionPane.showMessageDialog(null, "Citizen not found.");
                        return;
                    }

                    if (conf.insertData("INSERT INTO blotter_reports (c_id, reason, statement, creation_date, status) "
                            + "VALUES ('" + c_id + "', '" + reason.getText() + "', '" + Statement.getText() + "'"
                            + ", '" + cdate.getValue() + "', '" + status.getSelectedItem() + "')") == 1) {

                        try {
                            ResultSet getLast = conf.getData("SELECT LAST_INSERT_ID() AS last_id");
                            int lastInsertedId = -1;
                            if (getLast.next()) {
                                lastInsertedId = getLast.getInt("last_id");
                            }

                            String action = "Added new blotter with ID No. " + lastInsertedId;
                            conf.insertData("INSERT INTO logs (u_id, action, date) VALUES ('" + sess.getUid() + "', '" + action + "', '" + LocalDateTime.now() + "')");

                            JOptionPane.showMessageDialog(null, "Registered Successfully!");
                            blotter_dashboard bd = new blotter_dashboard();
                            bd.Uidentifier.setText(this.Uidentifier);
                            bd.setVisible(true);
                            this.dispose();
                        } catch (Exception ex) {
                            System.out.println("Error: " + ex);
                        }
                    }

                } catch (Exception ex) {
                    System.out.println("Error: " + ex.getMessage());
                }
            }
        } else {
            if (Statement.getText().isEmpty()
                    || reason.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "All Fields are Required!");
            } else {
                conf.updateData("UPDATE blotter_reports SET reason = '" + reason.getText() + "',"
                        + "statement = '" + Statement.getText() + "',"
                        + "status = '" + status.getSelectedItem() + "' WHERE b_id = '" + b_id.getText() + "'");

                String action = "Updated blotter with ID No. " + b_id.
                        getText();
                conf.insertData("INSERT INTO logs (u_id, action, date) VALUES ('" + sess.getUid() + "', '" + action + "', '" + LocalDateTime.now() + "')");

                blotter_dashboard bd = new blotter_dashboard();
                bd.Uidentifier.setText(this.Uidentifier);
                bd.setVisible(true);
                this.dispose();
            }
        }
    }//GEN-LAST:event_enterMouseClicked

    private void enterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterMouseEntered
        // TODO add your handling code here:
        enter.setForeground(Color.white);
        enter.setBackground(Color.gray);
    }//GEN-LAST:event_enterMouseEntered

    private void enterMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterMouseExited
        // TODO add your handling code here:
        enter.setForeground(Color.black);
        enter.setBackground(null);
    }//GEN-LAST:event_enterMouseExited

    private void clearMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_clearMouseDragged

    private void clearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseClicked
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(null, "Confirm Clear everything?", "clear", JOptionPane.YES_NO_OPTION);
        if(confirm == JOptionPane.YES_OPTION){
            Statement.setText(null);
            reason.setText(null);
            JOptionPane.showMessageDialog(null, "Cleared Successfully!");
        }
    }//GEN-LAST:event_clearMouseClicked

    private void clearMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseEntered
        // TODO add your handling code here:
        clear.setForeground(Color.white);
        clear.setBackground(Color.gray);
    }//GEN-LAST:event_clearMouseEntered

    private void clearMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseExited
        // TODO add your handling code here:
        clear.setForeground(Color.black);
        clear.setBackground(null);
    }//GEN-LAST:event_clearMouseExited

    private void clearMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_clearMousePressed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        setExtendedState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        int exit = JOptionPane.showConfirmDialog(null, "Confirm Exit?", "Exit Confirmation", JOptionPane.YES_NO_OPTION);
        if (exit == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(null, "Exited Successfully!");
            this.dispose();
        }else{
            JOptionPane.showMessageDialog(null, "Exit Canceled!");
        }
    }//GEN-LAST:event_jLabel3MouseClicked

    private void statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusActionPerformed

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        // TODO add your handling code here:
        blotter_dashboard bd = new blotter_dashboard();
        if(this.Uidentifier.equals("Admin")){
            bd.Uidentifier.setText("Admin");
            bd.setVisible(true);
            this.dispose();
        }else{
            bd.Uidentifier.setText("Staff");
            bd.setVisible(true);
            this.dispose();
        }
        
    }//GEN-LAST:event_backMouseClicked

    private void backMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseEntered
        // TODO add your handling code here:
        back.setForeground(Color.white);
        back.setBackground(Color.gray);
    }//GEN-LAST:event_backMouseEntered

    private void backMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseExited
        // TODO add your handling code here:
        back.setForeground(Color.black);
        back.setBackground(null);
    }//GEN-LAST:event_backMouseExited

    private void b_idMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_idMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_b_idMouseEntered

    private void b_idMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_idMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_b_idMouseExited

    private void b_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b_idActionPerformed

    private void StatementMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StatementMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_StatementMouseEntered

    private void StatementMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StatementMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_StatementMouseExited

    private void StatementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatementActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StatementActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(blotter_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(blotter_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(blotter_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(blotter_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new blotter_form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField Statement;
    public javax.swing.JTextField b_id;
    private javax.swing.JLabel back;
    public javax.swing.JSpinner cdate;
    private javax.swing.JLabel clear;
    public javax.swing.JLabel enter;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextField reason;
    public javax.swing.JComboBox<String> status;
    public javax.swing.JLabel title;
    public javax.swing.JTable users_table;
    // End of variables declaration//GEN-END:variables
}
